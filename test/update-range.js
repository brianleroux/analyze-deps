const chai = require('chai');
const expect = chai.expect;
const updateRange = require('../src/update-range');

const testCases = [
// [range, latest, versions, result]
  ['1.2.3', '1.2.3', ['1.0.0', '1.2.3'], '1.2.3'],
  ['1.2.3', '1.2.4', ['1.0.0', '1.2.4'], '1.2.4'],
  ['1.2.3', '1.3.0', ['1.3.0'], '1.3.0'],
  ['1.2.3', '2.0.1', ['1.0.0', '2.0.1-rc.1', '2.0.1'], '2.0.1'],
  ['1.2.3-rc.1', '1.2.3', ['1.2.3-rc.1', '1.2.3'], '1.2.3'],
  ['1.2.3-rc.1', '1.2.4', ['1.2.3-rc.1', '1.2.3', '1.2.4'], '1.2.4'],
  ['1.2.3-rc.1', '1.3.0', ['1.2.3-rc.1', '1.2.3', '1.3.0'], '1.3.0'],
  ['1.2.3-rc.1', '2.0.1', ['1.2.3-rc.1', '1.2.3', '2.0.0', '2.0.1'], '2.0.1'],

  ['=1.2.3', '1.2.3', ['1.0.0', '1.2.3'], '=1.2.3'],
  ['=1.2.3', '1.2.4', ['1.0.0', '1.2.4'], '=1.2.4'],
  ['=1.2.3', '1.3.0', ['1.3.0'], '=1.3.0'],
  ['=1.2.3', '2.0.1', ['1.0.0', '2.0.1-rc.1', '2.0.1'], '=2.0.1'],
  ['=1.2.3-rc.1', '1.2.3', ['1.2.3-rc.1', '1.2.3'], '=1.2.3'],
  ['=1.2.3-rc.1', '1.2.4', ['1.2.3-rc.1', '1.2.3', '1.2.4'], '=1.2.4'],
  ['=1.2.3-rc.1', '1.3.0', ['1.2.3-rc.1', '1.2.3', '1.3.0'], '=1.3.0'],
  ['=1.2.3-rc.1', '2.0.1', ['1.2.3-rc.1', '1.2.3', '2.0.0', '2.0.1'], '=2.0.1'],

  ['v1.2.3', '1.2.3', ['1.0.0', '1.2.3'], 'v1.2.3'],
  ['v1.2.3', '1.2.4', ['1.0.0', '1.2.4'], 'v1.2.4'],
  ['v1.2.3', '1.3.0', ['1.3.0'], 'v1.3.0'],
  ['v1.2.3', '2.0.1', ['1.0.0', '2.0.1-rc.1', '2.0.1'], 'v2.0.1'],
  ['v1.2.3-rc.1', '1.2.3', ['1.2.3-rc.1', '1.2.3'], 'v1.2.3'],
  ['v1.2.3-rc.1', '1.2.4', ['1.2.3-rc.1', '1.2.3', '1.2.4'], 'v1.2.4'],
  ['v1.2.3-rc.1', '1.3.0', ['1.2.3-rc.1', '1.2.3', '1.3.0'], 'v1.3.0'],
  ['v1.2.3-rc.1', '2.0.1', ['1.2.3-rc.1', '1.2.3', '2.0.0', '2.0.1'], 'v2.0.1'],

  ['^1.2.3', '1.2.3', ['1.1.0', '1.2.0', '1.2.1', '1.2.2', '1.2.3'], '^1.2.3'],
  ['^1.2.3', '1.2.4', ['1.1.0', '1.2.4'], '^1.2.4'],
  ['^1.2.3', '1.3.0', ['1.3.0-alpha', '1.3.0', '1.4.0-alpha'], '^1.3.0'],
  ['^1.2.3', '2.0.1', ['1.0.0', '2.0.1-rc.1', '2.0.1', '2.0.2-rc.1', '2.0.2-rc.2'], '^2.0.1'],
  ['^1.2.3-rc.1', '1.2.3', ['1.2.3-rc.1', '1.2.3', '2.0.0-beta'], '^1.2.3'],
  ['^1.2.3-rc.1', '1.2.4', ['1.2.3-rc.1', '1.2.3', '1.2.4'], '^1.2.4'],
  ['^1.2.3-rc.1', '1.3.0', ['1.2.3-rc.1', '1.2.3', '1.3.0'], '^1.3.0'],
  ['^1.2.3-rc.1', '2.0.1', ['1.2.3-rc.1', '2.0.1'], '^2.0.1'],

  ['~1.2.3', '1.2.3', ['1.2.0', '1.2.1', '1.2.2', '1.2.3', '1.2.4-rc.1'], '~1.2.3'],
  ['~1.2.3', '1.2.4', ['1.2.3', '1.2.4-beta', '1.2.4'], '~1.2.4'],
  ['~1.2.3', '1.3.0', ['1.2.3', '1.3.0'], '~1.3.0'],
  ['~1.2.3', '2.0.1', ['1.0.0', '2.0.1'], '~2.0.1'],
  ['~1.2.3-rc.1', '1.2.3', ['1.2.3'], '~1.2.3'],
  ['~1.2.3-rc.1', '1.2.4', ['1.2.3-rc.1', '1.2.3', '1.2.4', '2.0.0-rc'], '~1.2.4'],
  ['~1.2.3-rc.1', '1.3.0', ['1.2.3-rc.1', '1.2.3', '1.3.0'], '~1.3.0'],
  ['~1.2.3-rc.1', '2.0.1', ['1.2.3-rc.1', '1.2.3-rc.2', '2.0.0', '2.0.1'], '~2.0.1'],

  ['>=1.2.3', '1.2.3', ['1.0.0', '1.2.3'], '>=1.2.3'],
  ['>=1.2.3', '1.2.4', ['1.0.0', '1.2.4', '1.3.0-rc'], '>=1.2.4'],
  ['>=1.2.3', '1.3.0', ['1.2.3', '1.3.0'], '>=1.3.0'],
  ['>=1.2.3', '2.0.1', ['1.0.0', '2.0.1-rc.1', '2.0.1', '3.0.0-candidate'], '>=2.0.1'],
  ['>=1.2.3-rc.1', '1.2.3', ['1.2.3-rc.1', '1.2.3-rc.2', '1.2.3', '1.3.0-rc.1'], '>=1.2.3'],
  ['>=1.2.3-rc.1', '1.2.4', ['1.2.3-rc.1', '1.2.3', '1.2.4', '2.0.0-beta'], '>=1.2.4'],
  ['>=1.2.3-rc.1', '1.3.0', ['1.2.3-rc.1', '1.2.3', '1.3.0', '1.3.1-rc'], '>=1.3.0'],
  ['>=1.2.3-rc.1', '2.0.1', ['1.2.3-rc.1', '1.2.3', '2.0.0', '2.0.1', '2.0.2-rc'], '>=2.0.1'],

  ['^0.14.7||^15.0.1', '15.3.2', ['0.14.0', '15.0.0', '15.3.2'], null],
  ['^0.14.7 || ^15.0.1', '15.3.2', ['0.14.0', '15.0.0', '15.3.2'], null],
  ['^1.2.3', '1.2.7', ['1.2.3', '1.2.7', '1.2.8'], null],
  ['invalid', '1.2.3', ['1.2.3'], null],
  ['1.2.3', 'invalid', [], null]
];

describe('updateRange', () => {
  testCases.forEach(testCase => {
    const range = testCase[0];
    const latest = testCase[1];
    const versions = testCase[2];
    const result = testCase[3];

    it(`updateRange('${range}', '${latest}') === ${result === null ? 'null' : `'${result}'`}`, () => {
      expect(updateRange(range, latest, versions)).to.equal(result);
    });
  });
});
